#!/usr/bin/env ruby

require "dotenv"
require "openai"
require "reline"
require "word_wrap"

Dotenv.load(".env", "~/.chatai.env")

OpenAI.configure do |config|
  config.access_token = ENV.fetch("OPENAI_API_KEY") do |name|
    print "OpenAI API Key: "
    gets.chomp
  end
end

def chat(client, input)
  parameters = {
    model: ENV.fetch("OPENAI_MODEL", "gpt-3.5-turbo"),
    messages: [{ role: "user", content: input }],
    temperature: 0.7,
  }
  begin
    res = client.chat(parameters: parameters)
  rescue Net::ReadTimeout
    retry
  rescue Errno::ECONNRESET
    retry
  end
  if (err = res.dig("error", "message"))
    puts err
    exit 1
  end
  res.dig("choices", 0, "message", "content").strip
end

def fmt(text)
  WordWrap.ww(text, 72)
end

client = OpenAI::Client.new
if $stdin.tty?
  begin
    context = []
    loop do
      line = Reline.readline("\x1b[36m>\x1b[0m ")
      break if line.nil? || line == "quit"

      Reline::HISTORY << line
      context << line
      text = chat(client, context.join("\n\n"))
      puts fmt(text)
      puts
      context << text
    end
  rescue SignalException
    puts
  end
else
  context = ARGF.read
  text = chat(client, context)
  puts fmt(text)
end
